{"ast":null,"code":"const mongoose = require('mongoose');\nconst gameSessionSchema = new mongoose.Schema({\n  sessionId: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  players: {\n    type: [String],\n    required: true,\n    validate: [arrayLimit, '{PATH} exceeds the limit of 2']\n  },\n  board: {\n    type: [String],\n    default: Array(9).fill('') // 3x3 Tic-Tac-Toe board\n  },\n  currentPlayer: {\n    type: String,\n    default: 'X' // X or O\n  },\n  winner: {\n    type: String,\n    default: ''\n  },\n  status: {\n    type: String,\n    enum: ['ongoing', 'finished'],\n    default: 'ongoing'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  sessionId: {\n    type: String,\n    required: true,\n    // Set to true if you want to enforce sessionId, otherwise set to false\n    unique: true\n  }\n});\nfunction arrayLimit(val) {\n  return val.length <= 2;\n}\ngameSessionSchema.statics.createSession = async function (sessionId, players) {\n  const session = new this({\n    sessionId,\n    players\n  });\n  await session.save();\n  return session;\n};\ngameSessionSchema.methods.addMove = function (player, index) {\n  if (this.status === 'finished' || this.board[index] !== '' || player !== this.currentPlayer) {\n    return;\n  }\n  this.board[index] = player;\n  if (checkWinner(this.board, player)) {\n    this.winner = player;\n    this.status = 'finished';\n  } else if (this.board.every(cell => cell !== '')) {\n    this.status = 'finished'; // Draw\n  } else {\n    this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\n  }\n  return this.save();\n};\nfunction checkWinner(board, player) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  return lines.some(line => {\n    return line.every(index => {\n      return board[index] === player;\n    });\n  });\n}\nmodule.exports = mongoose.model('GameSession', gameSessionSchema);","map":{"version":3,"names":["mongoose","require","gameSessionSchema","Schema","sessionId","type","String","required","unique","players","validate","arrayLimit","board","default","Array","fill","currentPlayer","winner","status","enum","createdAt","Date","now","val","length","statics","createSession","session","save","methods","addMove","player","index","checkWinner","every","cell","lines","some","line","module","exports","model"],"sources":["/Users/chiaangyong/Desktop/Project/aet-swe-chiaangyong/src/components/GameSession.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst gameSessionSchema = new mongoose.Schema({\n  sessionId: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  players: {\n    type: [String],\n    required: true,\n    validate: [arrayLimit, '{PATH} exceeds the limit of 2']\n  },\n  board: {\n    type: [String],\n    default: Array(9).fill('') // 3x3 Tic-Tac-Toe board\n  },\n  currentPlayer: {\n    type: String,\n    default: 'X' // X or O\n  },\n  winner: {\n    type: String,\n    default: ''\n  },\n  status: {\n    type: String,\n    enum: ['ongoing', 'finished'],\n    default: 'ongoing'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  sessionId: {\n    type: String,\n    required: true, // Set to true if you want to enforce sessionId, otherwise set to false\n    unique: true\n  }\n\n});\n\nfunction arrayLimit(val) {\n  return val.length <= 2;\n}\n\ngameSessionSchema.statics.createSession = async function (sessionId, players) {\n  const session = new this({ sessionId, players });\n  await session.save();\n  return session;\n};\n\ngameSessionSchema.methods.addMove = function (player, index) {\n  if (this.status === 'finished' || this.board[index] !== '' || player !== this.currentPlayer) {\n    return;\n  }\n\n  this.board[index] = player;\n  if (checkWinner(this.board, player)) {\n    this.winner = player;\n    this.status = 'finished';\n  } else if (this.board.every(cell => cell !== '')) {\n    this.status = 'finished'; // Draw\n  } else {\n    this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\n  }\n\n  return this.save();\n};\n\nfunction checkWinner(board, player) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  return lines.some(line => {\n    return line.every(index => {\n      return board[index] === player;\n    });\n  });\n}\n\nmodule.exports = mongoose.model('GameSession', gameSessionSchema);\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,iBAAiB,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EAC5CC,SAAS,EAAE;IACTC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;IACPJ,IAAI,EAAE,CAACC,MAAM,CAAC;IACdC,QAAQ,EAAE,IAAI;IACdG,QAAQ,EAAE,CAACC,UAAU,EAAE,+BAA+B;EACxD,CAAC;EACDC,KAAK,EAAE;IACLP,IAAI,EAAE,CAACC,MAAM,CAAC;IACdO,OAAO,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC7B,CAAC;EACDC,aAAa,EAAE;IACbX,IAAI,EAAEC,MAAM;IACZO,OAAO,EAAE,GAAG,CAAC;EACf,CAAC;EACDI,MAAM,EAAE;IACNZ,IAAI,EAAEC,MAAM;IACZO,OAAO,EAAE;EACX,CAAC;EACDK,MAAM,EAAE;IACNb,IAAI,EAAEC,MAAM;IACZa,IAAI,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;IAC7BN,OAAO,EAAE;EACX,CAAC;EACDO,SAAS,EAAE;IACTf,IAAI,EAAEgB,IAAI;IACVR,OAAO,EAAEQ,IAAI,CAACC;EAChB,CAAC;EACDlB,SAAS,EAAE;IACTC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IAAE;IAChBC,MAAM,EAAE;EACV;AAEF,CAAC,CAAC;AAEF,SAASG,UAAUA,CAACY,GAAG,EAAE;EACvB,OAAOA,GAAG,CAACC,MAAM,IAAI,CAAC;AACxB;AAEAtB,iBAAiB,CAACuB,OAAO,CAACC,aAAa,GAAG,gBAAgBtB,SAAS,EAAEK,OAAO,EAAE;EAC5E,MAAMkB,OAAO,GAAG,IAAI,IAAI,CAAC;IAAEvB,SAAS;IAAEK;EAAQ,CAAC,CAAC;EAChD,MAAMkB,OAAO,CAACC,IAAI,CAAC,CAAC;EACpB,OAAOD,OAAO;AAChB,CAAC;AAEDzB,iBAAiB,CAAC2B,OAAO,CAACC,OAAO,GAAG,UAAUC,MAAM,EAAEC,KAAK,EAAE;EAC3D,IAAI,IAAI,CAACd,MAAM,KAAK,UAAU,IAAI,IAAI,CAACN,KAAK,CAACoB,KAAK,CAAC,KAAK,EAAE,IAAID,MAAM,KAAK,IAAI,CAACf,aAAa,EAAE;IAC3F;EACF;EAEA,IAAI,CAACJ,KAAK,CAACoB,KAAK,CAAC,GAAGD,MAAM;EAC1B,IAAIE,WAAW,CAAC,IAAI,CAACrB,KAAK,EAAEmB,MAAM,CAAC,EAAE;IACnC,IAAI,CAACd,MAAM,GAAGc,MAAM;IACpB,IAAI,CAACb,MAAM,GAAG,UAAU;EAC1B,CAAC,MAAM,IAAI,IAAI,CAACN,KAAK,CAACsB,KAAK,CAACC,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC,EAAE;IAChD,IAAI,CAACjB,MAAM,GAAG,UAAU,CAAC,CAAC;EAC5B,CAAC,MAAM;IACL,IAAI,CAACF,aAAa,GAAG,IAAI,CAACA,aAAa,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EAC7D;EAEA,OAAO,IAAI,CAACY,IAAI,CAAC,CAAC;AACpB,CAAC;AAED,SAASK,WAAWA,CAACrB,KAAK,EAAEmB,MAAM,EAAE;EAClC,MAAMK,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EAED,OAAOA,KAAK,CAACC,IAAI,CAACC,IAAI,IAAI;IACxB,OAAOA,IAAI,CAACJ,KAAK,CAACF,KAAK,IAAI;MACzB,OAAOpB,KAAK,CAACoB,KAAK,CAAC,KAAKD,MAAM;IAChC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEAQ,MAAM,CAACC,OAAO,GAAGxC,QAAQ,CAACyC,KAAK,CAAC,aAAa,EAAEvC,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}