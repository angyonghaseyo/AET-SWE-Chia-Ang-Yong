{"ast":null,"code":"const mongoose=require('mongoose');const gameSessionSchema=new mongoose.Schema({sessionId:{type:String,required:true,unique:true},players:{type:[String],required:true,validate:[arrayLimit,'{PATH} exceeds the limit of 2']},board:{type:[String],default:Array(9).fill('')// 3x3 Tic-Tac-Toe board\n},currentPlayer:{type:String,default:'X'// X or O\n},winner:{type:String,default:''},status:{type:String,enum:['ongoing','finished'],default:'ongoing'},createdAt:{type:Date,default:Date.now},sessionId:{type:String,required:true,// Set to true if you want to enforce sessionId, otherwise set to false\nunique:true}});function arrayLimit(val){return val.length<=2;}gameSessionSchema.statics.createSession=async function(sessionId,players){const session=new this({sessionId,players});await session.save();return session;};gameSessionSchema.methods.addMove=function(player,index){if(this.status==='finished'||this.board[index]!==''||player!==this.currentPlayer){return;}this.board[index]=player;if(checkWinner(this.board,player)){this.winner=player;this.status='finished';}else if(this.board.every(cell=>cell!=='')){this.status='finished';// Draw\n}else{this.currentPlayer=this.currentPlayer==='X'?'O':'X';}return this.save();};function checkWinner(board,player){const lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];return lines.some(line=>{return line.every(index=>{return board[index]===player;});});}module.exports=mongoose.model('GameSession',gameSessionSchema);","map":{"version":3,"names":["mongoose","require","gameSessionSchema","Schema","sessionId","type","String","required","unique","players","validate","arrayLimit","board","default","Array","fill","currentPlayer","winner","status","enum","createdAt","Date","now","val","length","statics","createSession","session","save","methods","addMove","player","index","checkWinner","every","cell","lines","some","line","module","exports","model"],"sources":["/Users/chiaangyong/Desktop/Project/aet-swe-chiaangyong/src/components/GameSession.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst gameSessionSchema = new mongoose.Schema({\n  sessionId: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  players: {\n    type: [String],\n    required: true,\n    validate: [arrayLimit, '{PATH} exceeds the limit of 2']\n  },\n  board: {\n    type: [String],\n    default: Array(9).fill('') // 3x3 Tic-Tac-Toe board\n  },\n  currentPlayer: {\n    type: String,\n    default: 'X' // X or O\n  },\n  winner: {\n    type: String,\n    default: ''\n  },\n  status: {\n    type: String,\n    enum: ['ongoing', 'finished'],\n    default: 'ongoing'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  sessionId: {\n    type: String,\n    required: true, // Set to true if you want to enforce sessionId, otherwise set to false\n    unique: true\n  }\n\n});\n\nfunction arrayLimit(val) {\n  return val.length <= 2;\n}\n\ngameSessionSchema.statics.createSession = async function (sessionId, players) {\n  const session = new this({ sessionId, players });\n  await session.save();\n  return session;\n};\n\ngameSessionSchema.methods.addMove = function (player, index) {\n  if (this.status === 'finished' || this.board[index] !== '' || player !== this.currentPlayer) {\n    return;\n  }\n\n  this.board[index] = player;\n  if (checkWinner(this.board, player)) {\n    this.winner = player;\n    this.status = 'finished';\n  } else if (this.board.every(cell => cell !== '')) {\n    this.status = 'finished'; // Draw\n  } else {\n    this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\n  }\n\n  return this.save();\n};\n\nfunction checkWinner(board, player) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  return lines.some(line => {\n    return line.every(index => {\n      return board[index] === player;\n    });\n  });\n}\n\nmodule.exports = mongoose.model('GameSession', gameSessionSchema);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}