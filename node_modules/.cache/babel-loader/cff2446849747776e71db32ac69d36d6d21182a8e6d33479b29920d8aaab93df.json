{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:5000';// Adjust according to your server configuration\nconst api={// Create a new game session\ncreateSession:async()=>{try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/sessions\"));return response.data;}catch(error){console.error('Error creating session:',error);throw error;}},// Get a list of available game sessions\ngetSessions:async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/api/sessions\"));return response.data;}catch(error){console.error('Error fetching sessions:',error);throw error;}},// Get details of a single game session\ngetSession:async sessionId=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/api/sessions/\").concat(sessionId));return response.data;}catch(error){console.error('Error fetching session:',error);throw error;}},// Make a move in a game session\nmakeMove:async(sessionId,player,position)=>{try{const response=await axios.put(\"\".concat(API_BASE_URL,\"/api/sessions/\").concat(sessionId,\"/move\"),{player,position});return response.data;}catch(error){console.error('Error making move:',error);throw error;}},// Retrieve the game state after a move\ngetGameState:async sessionId=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/api/sessions/\").concat(sessionId,\"/state\"));return response.data;}catch(error){console.error('Error retrieving game state:',error);throw error;}},joinSession:async(sessionId,playerName)=>{const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/sessions/\").concat(sessionId,\"/join\"),{playerName});return response.data;},// End a game session\nendSession:async sessionId=>{try{const response=await axios.delete(\"\".concat(API_BASE_URL,\"/api/sessions/\").concat(sessionId));return response.data;}catch(error){console.error('Error ending session:',error);throw error;}}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","createSession","response","post","concat","data","error","console","getSessions","get","getSession","sessionId","makeMove","player","position","put","getGameState","joinSession","playerName","endSession","delete"],"sources":["/Users/chiaangyong/Desktop/Project/aet-swe-chiaangyong/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000'; // Adjust according to your server configuration\n\nconst api = {\n  // Create a new game session\n  createSession: async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/sessions`);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating session:', error);\n      throw error;\n    }\n  },\n\n  // Get a list of available game sessions\n  getSessions: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n      throw error;\n    }\n  },\n\n  // Get details of a single game session\n  getSession: async (sessionId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions/${sessionId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching session:', error);\n      throw error;\n    }\n  },\n\n  // Make a move in a game session\n  makeMove: async (sessionId, player, position) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/api/sessions/${sessionId}/move`, {\n        player,\n        position\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error making move:', error);\n      throw error;\n    }\n  },\n\n  // Retrieve the game state after a move\n  getGameState: async (sessionId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions/${sessionId}/state`);\n      return response.data;\n    } catch (error) {\n      console.error('Error retrieving game state:', error);\n      throw error;\n    }\n  },\n  joinSession: async (sessionId, playerName) => {\n  const response = await axios.post(`${API_BASE_URL}/api/sessions/${sessionId}/join`, { playerName });\n  return response.data;\n  },\n\n  // End a game session\n  endSession: async (sessionId) => {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/api/sessions/${sessionId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error ending session:', error);\n      throw error;\n    }\n  }\n};\n\nexport default api;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}