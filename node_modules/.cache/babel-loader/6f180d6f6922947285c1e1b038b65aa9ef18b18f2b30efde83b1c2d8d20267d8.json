{"ast":null,"code":"import React,{useState,useEffect}from'react';import io from'socket.io-client';import{useNavigate}from'react-router-dom';import socket from'./socket';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const WaitingRoom=_ref=>{let{sessionId,playerName}=_ref;const[session,setSession]=useState(null);const[error,setError]=useState('');const navigate=useNavigate();useEffect(()=>{const joinSession=()=>{socket.emit('join session',sessionId);};const handleSessionUpdate=updatedSessionState=>{setSession(updatedSessionState);if(updatedSessionState.status==='in_progress'){navigate(\"/game/\".concat(sessionId));}};const handleError=errorMessage=>{setError(errorMessage);};// Attach event listeners\nsocket.on('session update',handleSessionUpdate);socket.on('error',handleError);// Join the session\njoinSession();// Clean up listeners when the component unmounts\nreturn()=>{socket.off('session update',handleSessionUpdate);socket.off('error',handleError);};},[sessionId,navigate]);// Display error if any\nif(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}// Display the joining message until the session info is loaded\nif(!session){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Joining session as \",playerName,\"...\"]});}// Display a message while waiting for another player to join\nif(session.status==='waiting'){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Waiting for another player to join, \",playerName,\"...\"]});}// Display a message when the game is starting\nif(session.status==='in_progress'){return/*#__PURE__*/_jsx(\"div\",{children:\"Game is starting...\"});}// If the above conditions are not met, it's safe to assume we're still waiting for updates\nreturn/*#__PURE__*/_jsx(\"div\",{children:\"Waiting for session updates...\"});};export default WaitingRoom;","map":{"version":3,"names":["React","useState","useEffect","io","useNavigate","socket","jsxs","_jsxs","jsx","_jsx","WaitingRoom","_ref","sessionId","playerName","session","setSession","error","setError","navigate","joinSession","emit","handleSessionUpdate","updatedSessionState","status","concat","handleError","errorMessage","on","off","children"],"sources":["/Users/chiaangyong/Desktop/Project/aet-swe-chiaangyong/src/components/WaitingRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useNavigate } from 'react-router-dom';\nimport socket from './socket'; \n\n\nconst WaitingRoom = ({ sessionId, playerName }) => {\n  const [session, setSession] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const joinSession = () => {\n      socket.emit('join session', sessionId);\n    };\n\n    const handleSessionUpdate = (updatedSessionState) => {\n      setSession(updatedSessionState);\n      if (updatedSessionState.status === 'in_progress') {\n        navigate(`/game/${sessionId}`);\n      }\n    };\n\n    const handleError = (errorMessage) => {\n      setError(errorMessage);\n    };\n\n    // Attach event listeners\n    socket.on('session update', handleSessionUpdate);\n    socket.on('error', handleError);\n\n    // Join the session\n    joinSession();\n\n    // Clean up listeners when the component unmounts\n    return () => {\n      socket.off('session update', handleSessionUpdate);\n      socket.off('error', handleError);\n    };\n  }, [sessionId, navigate]);\n\n  // Display error if any\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  // Display the joining message until the session info is loaded\n  if (!session) {\n    return <div>Joining session as {playerName}...</div>;\n  }\n\n  // Display a message while waiting for another player to join\n  if (session.status === 'waiting') {\n    return <div>Waiting for another player to join, {playerName}...</div>;\n  }\n\n  // Display a message when the game is starting\n  if (session.status === 'in_progress') {\n    return <div>Game is starting...</div>;\n  }\n\n  // If the above conditions are not met, it's safe to assume we're still waiting for updates\n  return (\n    <div>\n      Waiting for session updates...\n    </div>\n  );\n};\n\nexport default WaitingRoom;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAG9B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAA+B,IAA9B,CAAEC,SAAS,CAAEC,UAAW,CAAC,CAAAF,IAAA,CAC5C,KAAM,CAACG,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAiB,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAC9BF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,WAAW,CAAGA,CAAA,GAAM,CACxBd,MAAM,CAACe,IAAI,CAAC,cAAc,CAAER,SAAS,CAAC,CACxC,CAAC,CAED,KAAM,CAAAS,mBAAmB,CAAIC,mBAAmB,EAAK,CACnDP,UAAU,CAACO,mBAAmB,CAAC,CAC/B,GAAIA,mBAAmB,CAACC,MAAM,GAAK,aAAa,CAAE,CAChDL,QAAQ,UAAAM,MAAA,CAAUZ,SAAS,CAAE,CAAC,CAChC,CACF,CAAC,CAED,KAAM,CAAAa,WAAW,CAAIC,YAAY,EAAK,CACpCT,QAAQ,CAACS,YAAY,CAAC,CACxB,CAAC,CAED;AACArB,MAAM,CAACsB,EAAE,CAAC,gBAAgB,CAAEN,mBAAmB,CAAC,CAChDhB,MAAM,CAACsB,EAAE,CAAC,OAAO,CAAEF,WAAW,CAAC,CAE/B;AACAN,WAAW,CAAC,CAAC,CAEb;AACA,MAAO,IAAM,CACXd,MAAM,CAACuB,GAAG,CAAC,gBAAgB,CAAEP,mBAAmB,CAAC,CACjDhB,MAAM,CAACuB,GAAG,CAAC,OAAO,CAAEH,WAAW,CAAC,CAClC,CAAC,CACH,CAAC,CAAE,CAACb,SAAS,CAAEM,QAAQ,CAAC,CAAC,CAEzB;AACA,GAAIF,KAAK,CAAE,CACT,mBAAOT,KAAA,QAAAsB,QAAA,EAAK,SAAO,CAACb,KAAK,EAAM,CAAC,CAClC,CAEA;AACA,GAAI,CAACF,OAAO,CAAE,CACZ,mBAAOP,KAAA,QAAAsB,QAAA,EAAK,qBAAmB,CAAChB,UAAU,CAAC,KAAG,EAAK,CAAC,CACtD,CAEA;AACA,GAAIC,OAAO,CAACS,MAAM,GAAK,SAAS,CAAE,CAChC,mBAAOhB,KAAA,QAAAsB,QAAA,EAAK,sCAAoC,CAAChB,UAAU,CAAC,KAAG,EAAK,CAAC,CACvE,CAEA;AACA,GAAIC,OAAO,CAACS,MAAM,GAAK,aAAa,CAAE,CACpC,mBAAOd,IAAA,QAAAoB,QAAA,CAAK,qBAAmB,CAAK,CAAC,CACvC,CAEA;AACA,mBACEpB,IAAA,QAAAoB,QAAA,CAAK,gCAEL,CAAK,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}