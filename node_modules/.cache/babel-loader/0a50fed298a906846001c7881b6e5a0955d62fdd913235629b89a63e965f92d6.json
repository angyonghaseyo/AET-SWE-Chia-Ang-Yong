{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000'; // Adjust according to your server configuration\n\nconst api = {\n  // Create a new game session\n  createSession: async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/sessions`);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating session:', error);\n      throw error;\n    }\n  },\n  // Get a list of available game sessions\n  getSessions: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n      throw error;\n    }\n  },\n  // Get details of a single game session\n  getSession: async sessionId => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions/${sessionId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching session:', error);\n      throw error;\n    }\n  },\n  // Make a move in a game session\n  makeMove: async (sessionId, player, position) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/api/sessions/${sessionId}/move`, {\n        player,\n        position\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error making move:', error);\n      throw error;\n    }\n  },\n  // Retrieve the game state after a move\n  getGameState: async sessionId => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions/${sessionId}/state`);\n      return response.data;\n    } catch (error) {\n      console.error('Error retrieving game state:', error);\n      throw error;\n    }\n  },\n  joinSession: async (sessionId, playerName) => {\n    const response = await axios.post(`${API_BASE_URL}/api/sessions/${sessionId}/join`, {\n      playerName\n    });\n    return response.data;\n  },\n  // End a game session\n  endSession: async sessionId => {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/api/sessions/${sessionId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error ending session:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","createSession","response","post","data","error","console","getSessions","get","getSession","sessionId","makeMove","player","position","put","getGameState","joinSession","playerName","endSession","delete"],"sources":["/Users/chiaangyong/Desktop/Project/aet-swe-chiaangyong/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000'; // Adjust according to your server configuration\n\nconst api = {\n  // Create a new game session\n  createSession: async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/sessions`);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating session:', error);\n      throw error;\n    }\n  },\n\n  // Get a list of available game sessions\n  getSessions: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n      throw error;\n    }\n  },\n\n  // Get details of a single game session\n  getSession: async (sessionId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions/${sessionId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching session:', error);\n      throw error;\n    }\n  },\n\n  // Make a move in a game session\n  makeMove: async (sessionId, player, position) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/api/sessions/${sessionId}/move`, {\n        player,\n        position\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error making move:', error);\n      throw error;\n    }\n  },\n\n  // Retrieve the game state after a move\n  getGameState: async (sessionId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/sessions/${sessionId}/state`);\n      return response.data;\n    } catch (error) {\n      console.error('Error retrieving game state:', error);\n      throw error;\n    }\n  },\n  joinSession: async (sessionId, playerName) => {\n  const response = await axios.post(`${API_BASE_URL}/api/sessions/${sessionId}/join`, { playerName });\n  return response.data;\n  },\n\n  // End a game session\n  endSession: async (sessionId) => {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/api/sessions/${sessionId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error ending session:', error);\n      throw error;\n    }\n  }\n};\n\nexport default api;\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,MAAMC,GAAG,GAAG;EACV;EACAC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,YAAa,eAAc,CAAC;MACjE,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,eAAc,CAAC;MAChE,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,UAAU,EAAE,MAAOC,SAAS,IAAK;IAC/B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,iBAAgBW,SAAU,EAAC,CAAC;MAC7E,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAM,QAAQ,EAAE,MAAAA,CAAOD,SAAS,EAAEE,MAAM,EAAEC,QAAQ,KAAK;IAC/C,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAAE,GAAEf,YAAa,iBAAgBW,SAAU,OAAM,EAAE;QACjFE,MAAM;QACNC;MACF,CAAC,CAAC;MACF,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAU,YAAY,EAAE,MAAOL,SAAS,IAAK;IACjC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,iBAAgBW,SAAU,QAAO,CAAC;MACnF,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EACDW,WAAW,EAAE,MAAAA,CAAON,SAAS,EAAEO,UAAU,KAAK;IAC9C,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,YAAa,iBAAgBW,SAAU,OAAM,EAAE;MAAEO;IAAW,CAAC,CAAC;IACnG,OAAOf,QAAQ,CAACE,IAAI;EACpB,CAAC;EAED;EACAc,UAAU,EAAE,MAAOR,SAAS,IAAK;IAC/B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACqB,MAAM,CAAE,GAAEpB,YAAa,iBAAgBW,SAAU,EAAC,CAAC;MAChF,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}